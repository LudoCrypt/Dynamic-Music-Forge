buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        maven { url = 'https://repo.spongepowered.org/maven/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'


version = "1.4.1"
group = "net.ludocrypt.dynmus"
archivesBaseName = "dynmus"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.18'
    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config="+archivesBaseName+".mixins.json"
            property 'forge.logging.console.level', 'debug'
            mods {
                dynmus {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config="+archivesBaseName+".mixins.json"
            property 'forge.logging.console.level', 'debug'
            mods {
                dynmus {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            arg "-mixin.config="+archivesBaseName+".mixins.json"
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'dynmus', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                dynmus {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.18-38.0.12'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

if (System.getProperty("idea.sync.active") == "true") {
    afterEvaluate {
        tasks.withType(JavaCompile).all {
            it.options.annotationProcessorPath = files()
        }
    }
}

mixin {
    add sourceSets.main, "${archivesBaseName}.refmap.json"
}

jar {
    manifest {
        attributes([
                "MixinConfigs": "${archivesBaseName}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}